nav.navbar.navbar-default
  .navbar-header
    button.navbar-toggle.collapsed[type="button" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"]
      span.sr-only
        | Toggle navigation
      span.icon-bar
      span.icon-bar
      span.icon-bar
  #bs-example-navbar-collapse-1.collapse.navbar-collapse
    ul.nav.navbar-nav
      li.dropdown
        - if defined?(EnjuCirculation)
          a.dropdown-toggle[href="#" data-toggle="dropdown" role="button" aria-expanded="false"]
            - if current_user.try(:has_role?, 'Librarian')
              = t('page.librarian_circulation')
            - else
              = t('page.user_circulation')
            span.caret
          ul.dropdown-menu[role="menu"]
            - if user_signed_in?
              - if current_user.has_role?('Librarian')
                li
                  = link_to t('page.checkout'), new_basket_path
                li
                  = link_to t('page.checkin'), new_checkin_path
              li
                = link_to t('page.listing', model: t('activerecord.models.reserve')), reserves_path
              - if defined?(EnjuInterLibraryLoan)
                - if current_user.has_role?('Librarian')
                  li
                    = link_to t('activerecord.models.inter_library_loan'), inter_library_loans_path
              li
                = link_to t('page.checkout_history'), checkouts_path
            - else
              li
                = link_to t('page.checkout_history'), checkouts_path
              li
                = link_to t('page.listing', model: t('activerecord.models.reserve')), reserves_path
      - if user_signed_in?
        li.dropdown
          a.dropdown-toggle[href="#" data-toggle="dropdown" role="button" aria-expanded="false"]
            = t('page.acquisition')
            span.caret
          ul.dropdown-menu[role="menu"]
            - if current_user.has_role?('Librarian')
              li
                = link_to t('import_request.enter_isbn'), new_import_request_path
              - if defined?(EnjuNdl)
                li
                  = link_to t('enju_ndl.import_from_ndl_search'), ndl_books_path
              - if defined?(EnjuNii)
                li
                  = link_to t('enju_nii.import_from_cinii_books'), cinii_books_path
              - if defined?(EnjuLoc)
                li
                  = link_to t('enju_loc.import_from_loc_search'), loc_search_index_path
              li
                = link_to t('page.add_resource_manually'), new_manifestation_path
              li
                = link_to t('page.serial'), manifestations_path(serial: true)
              li
                = link_to t('page.import_from_file'), new_resource_import_file_path
              li
                = link_to t('activerecord.models.accept'), new_accept_path
              li
                = link_to t('activerecord.models.withdraw'), new_withdraw_path
              - if defined?(EnjuIr)
                li
                  = link_to t('activemodel.models.resource'), resources_path
              - if defined?(EnjuBookmark)
                li
                  = link_to t('page.listing', model: t('activerecord.models.bookmark')), bookmarks_path
            - else
              - if defined?(EnjuBookmark)
                li
                  = link_to t('page.listing', model: t('activerecord.models.bookmark')), bookmarks_path
      - if defined?(EnjuPurchaseRequest) or defined?(EnjuQuestion)
        li.dropdown
          a.dropdown-toggle[href="#" data-toggle="dropdown" role="button" aria-expanded="false"]
            = t('page.request')
            span.caret
          ul.dropdown-menu[role="menu"]
            - if user_signed_in?
              - if defined?(EnjuPurchaseRequest)
                li
                  = link_to t('activerecord.models.purchase_request'), purchase_requests_path
              - if defined?(EnjuQuestion)
                li
                  = link_to t('activerecord.models.question'), questions_path
            - else
              - if defined?(EnjuPurchaseRequest)
                li
                  = link_to t('activerecord.models.purchase_request'), purchase_requests_path
              - if defined?(EnjuQuestion)
                li
                  = link_to t('activerecord.models.question'), questions_path
      - if defined?(EnjuEvent)
        li.dropdown
          a.dropdown-toggle[href="#" data-toggle="dropdown" role="button" aria-expanded="false"]
            = t('activerecord.models.event')
            span.caret
          ul.dropdown-menu[role="menu"]
            - unless @library_group.real_libraries.empty?
            li
              = link_to t('page.calendar'), events_path(mode: 'calendar')
            li
              = link_to t('event.all'), events_path
            - @library_group.real_libraries.each do |library|
              li
                = link_to library.display_name, events_path(library_id: library.name)
              - if policy(Event).create?
                li
                  = link_to t('page.import'), new_event_import_file_path
      li.dropdown
        a.dropdown-toggle[href="#" data-toggle="dropdown" role="button" aria-expanded="false"]
          - if current_user.try(:has_role?, 'Librarian')
            = t('page.management')
          - else
            = t('page.configuration')
          span.caret
        ul.dropdown-menu[role="menu"]
          - if user_signed_in?
            - if current_user.has_role?('Librarian')
              li
                = link_to t('user.management'), profiles_path
              li
                = link_to t('page.agent_management'), agents_path
              li
                = link_to t('page.import'), page_import_path
              li
                = link_to t('page.export'), page_export_path
              - if defined?(EnjuPurchaseRequest)
                li
                  = link_to t('activerecord.models.order_list'), order_lists_path
              li
                = link_to t('page.statistics'), page_statistics_path
              - if defined?(EnjuSearchLog)
                li
                  = link_to t('activerecord.models.search_history'), search_histories_path
              li
                = link_to t('page.configuration'), page_configuration_path
            - else
              li
                = link_to t('user.account_management'), edit_my_account_path
          - else
            li
              = link_to t('page.sign_in'), new_user_session_path
